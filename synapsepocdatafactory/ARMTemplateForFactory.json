{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "synapsepocdatafactory"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"DataverseDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataverseDataLake'"
		},
		"Dynamics1_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'Dynamics1'"
		},
		"DataverseDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsepocv4.dfs.core.windows.net"
		},
		"Dynamics1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "e95a24be-7a82-4b41-af27-9da8c40a969a"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS to ASQL - product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "After using Azure Synapse Link for Dataverse, use this template to copy the Dataverse data from Azure Data Lake to Azure SQL.",
				"activities": [
					{
						"name": "Dataverse mapping to Azure SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataverseToAzureSQL1",
								"type": "DataFlowReference",
								"parameters": {
									"ContainerName": "\"dataverse-cobaltuat39-unq99abf791fa9c46899cc41db6b6038\"",
									"TableName": "\"product\""
								},
								"datasetParameters": {
									"ADLS": {},
									"SQL": {
										"SQLTableName": {
											"value": "product",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "1dcf3e8a-fa4d-459b-a4b4-63fb1f63eafb"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-29T19:35:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataverseToAzureSQL1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Dataverse data from Azure Data Lake to Azure SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "After using Azure Synapse Link for Dataverse, use this template to copy the Dataverse data from Azure Data Lake to Azure SQL.",
				"activities": [
					{
						"name": "Dataverse mapping to Azure SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataverseToAzureSQL",
								"type": "DataFlowReference",
								"parameters": {
									"ContainerName": "\"dataverse-cobaltuat39-unq99abf791fa9c46899cc41db6b6038\"",
									"TableName": "\"account\""
								},
								"datasetParameters": {
									"ADLS": {},
									"SQL": {
										"SQLTableName": "account"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "385132ec-0b58-41be-a0a7-89b67d355f74"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-29T19:35:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataverseToAzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The destination Azure SQL Table for the Dataverse data.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLTableName": {
						"type": "string",
						"defaultValue": "\"SQL Table Name\""
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQLTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The destination Azure SQL Table for the Dataverse data.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLTableName": {
						"type": "string",
						"defaultValue": "\"SQL Table Name\""
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQLTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataverseDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataverseDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://cobaltuat39.crm.dynamics.com",
					"authenticationType": "AADServicePrincipal",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalId": "[parameters('Dynamics1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('Dynamics1_servicePrincipalCredential')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseToAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Writes Dataverse data in Azure Data Lake Storage Gen2 to Azure SQL Database.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "DataverseDataLake",
								"type": "LinkedServiceReference"
							},
							"name": "ADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "SQL"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "parameters{\n\tContainerName as string (\"dataverse-cobaltuat39-unq99abf791fa9c46899cc41db6b6038\"),\n\tTableName as string (\"account\")\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tenableCdc: true,\n\tmode: 'read',\n\tentity: ($TableName),\n\tformat: 'cdm',\n\tmanifestType: 'model',\n\tfolderPath: '',\n\tfileSystem: ($ContainerName),\n\tdateFormats: ['MM/dd/yyyy'],\n\ttimestampFormats: ['MM/dd/yyyy hh:mm:ss a'],\n\tpreferredIntegralType: 'long',\n\tpreferredFractionalType: 'float') ~> ADLS\nADLS alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:[(\"Id\")],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataverseDataLake')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseToAzureSQL1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Writes Dataverse data in Azure Data Lake Storage Gen2 to Azure SQL Database.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "DataverseDataLake",
								"type": "LinkedServiceReference"
							},
							"name": "ADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "SQL"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "parameters{\n\tContainerName as string (\"dataverse-cobaltuat39-unq99abf791fa9c46899cc41db6b6038\"),\n\tTableName as string (\"product\")\n}\nsource(output(\n\t\tId as string,\n\t\tSinkCreatedOn as timestamp,\n\t\tSinkModifiedOn as timestamp,\n\t\tstatecode as long,\n\t\tstatuscode as long,\n\t\tproductstructure as long,\n\t\tproducttypecode as long,\n\t\tcobalt_category as long,\n\t\tcobalt_publishtoportal as boolean,\n\t\tcobalt_shippable as boolean,\n\t\tiskit as boolean,\n\t\tisstockitem as boolean,\n\t\tmsdyn_gdproptout as boolean,\n\t\tcobalt_preventbackorder as boolean,\n\t\tcobalt_taxable as boolean,\n\t\tisreparented as boolean,\n\t\tpricelevelid as string,\n\t\tpricelevelid_entitytype as string,\n\t\tparentproductid as string,\n\t\tparentproductid_entitytype as string,\n\t\ttransactioncurrencyid as string,\n\t\ttransactioncurrencyid_entitytype as string,\n\t\tdefaultuomscheduleid as string,\n\t\tdefaultuomscheduleid_entitytype as string,\n\t\tmodifiedbyexternalparty as string,\n\t\tmodifiedbyexternalparty_entitytype as string,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfby_entitytype as string,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfby_entitytype as string,\n\t\tcreatedbyexternalparty as string,\n\t\tcreatedbyexternalparty_entitytype as string,\n\t\tdefaultuomid as string,\n\t\tdefaultuomid_entitytype as string,\n\t\tmodifiedby as string,\n\t\tmodifiedby_entitytype as string,\n\t\tsubjectid as string,\n\t\tsubjectid_entitytype as string,\n\t\tcreatedby as string,\n\t\tcreatedby_entitytype as string,\n\t\tcobalt_taxtableid as string,\n\t\tcobalt_taxtableid_entitytype as string,\n\t\torganizationid as string,\n\t\torganizationid_entitytype as string,\n\t\tcurrentcost_base as decimal(18,2),\n\t\tstandardcost as decimal(18,2),\n\t\tcurrentcost as decimal(18,2),\n\t\tstandardcost_base as decimal(18,2),\n\t\tprice as decimal(18,2),\n\t\tprice_base as decimal(18,2),\n\t\ttimezoneruleversionnumber as long,\n\t\tproducturl as string,\n\t\tcobalt_remittanceapplicationorder as long,\n\t\tvendorid as string,\n\t\tquantityonhand as decimal(18,2),\n\t\tstageid as string,\n\t\tcreatedbyname as string,\n\t\tcreatedonbehalfbyyominame as string,\n\t\tmodifiedon as timestamp,\n\t\ttraversedpath as string,\n\t\tcreatedbyexternalpartyname as string,\n\t\tstockvolume as decimal(18,2),\n\t\tmodifiedbyyominame as string,\n\t\tdefaultuomidname as string,\n\t\tvalidfromdate as timestamp,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\tprocessid as string,\n\t\tcobalt_taxtableidname as string,\n\t\tpricelevelidname as string,\n\t\tvalidtodate as timestamp,\n\t\tmodifiedonbehalfbyname as string,\n\t\tproductnumber as string,\n\t\thierarchypath as string,\n\t\tsubjectidname as string,\n\t\tproductid as string,\n\t\tname as string,\n\t\timportsequencenumber as long,\n\t\tmodifiedbyexternalpartyyominame as string,\n\t\tentityimage_url as string,\n\t\tutcconversiontimezonecode as long,\n\t\tmodifiedbyname as string,\n\t\tentityimage_timestamp as long,\n\t\torganizationidname as string,\n\t\tdefaultuomscheduleidname as string,\n\t\tvendorpartnumber as string,\n\t\toverriddencreatedon as timestamp,\n\t\texchangerate as decimal(18,2),\n\t\tcobalt_minquantity as long,\n\t\tcreatedbyyominame as string,\n\t\tcreatedbyexternalpartyyominame as string,\n\t\tcreatedon as timestamp,\n\t\tversionnumber as long,\n\t\tsuppliername as string,\n\t\tstockweight as decimal(18,2),\n\t\tdescription as string,\n\t\tparentproductidname as string,\n\t\tquantitydecimal as long,\n\t\tdmtimportstate as long,\n\t\ttransactioncurrencyidname as string,\n\t\tmodifiedbyexternalpartyname as string,\n\t\tsize as string,\n\t\tentityimageid as string,\n\t\tvendorname as string,\n\t\tcreatedonbehalfbyname as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tenableCdc: true,\n\tmode: 'read',\n\tentity: ($TableName),\n\tformat: 'cdm',\n\tmanifestType: 'model',\n\tfolderPath: '',\n\tfileSystem: ($ContainerName),\n\tdateFormats: ['MM/dd/yyyy'],\n\ttimestampFormats: ['MM/dd/yyyy hh:mm:ss a'],\n\tpreferredIntegralType: 'long',\n\tpreferredFractionalType: 'float') ~> ADLS\nADLS alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Id'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataverseDataLake')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		}
	]
}